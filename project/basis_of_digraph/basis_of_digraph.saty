@import: ../../packages/cs-thesis/cs-thesis
@require: stdjareport
@require: math
@require: itemize


document (|
  title-ja = {多元環とクイバーの表現とその上のホモロジー代数};
  author-ja = {つー(ogata-k)};
  abstract-ja = '<
さて早速ですが、このブログを始めた理由の一つでもある有向グラフについて説明していこうと思います。<br>
有向グラフは離散数学やグラフ理論に触れている人や情報系やプログラミングをしている人ならすでに知っていると思いますが、それ以外の人にはなかなか知られていません。知ってるかどうか聞いてみても「折れ線グラフの一種？」等と返されてしまうのが現状です。そこで有向グラフについて広める第一弾となるこの記事では有向グラフの定義と有向グラフに関する用語などを解説していきます。<br>

# そもそも有向グラフとは
そもそも**有向グラフ**とは次の画像に見られるような頂点と呼ばれる点と点の間に、辺と呼ばれる矢印が描かれているものをいいます。<br>
<figure class="figure-image figure-image-fotolife" title="有向グラフの例1">[f:id:ogata-k:20181231104535p:plain:alt=有向グラフの例1]<figcaption>有向グラフの例1</figcaption></figure>
<figure class="figure-image figure-image-fotolife" title="有向グラフの例2">[f:id:ogata-k:20181231103720p:plain:alt=有向グラフの例2]<figcaption>有向グラフの例2</figcaption></figure>
さらに辺でつながれた頂点は別ものである必要がないため、次の画像にあるような同じ頂点をさす辺が存在する有向グラフも考えることができます。これを**ループを持つ有向グラフ**と言います。<br>
<figure class="figure-image figure-image-fotolife" title="ループを持つ有向グラフ">[f:id:ogata-k:20181231102933p:plain:alt=ループを持つ有向グラフの例]<figcaption>ループを持つ有向グラフの例</figcaption></figure>
そしてグラフ理論ではまず出てきませんが、次の画像のような頂点間に複数の辺を持つ有向グラフを考えることができます。これを**多重辺を持つ有向グラフ**と言います。<br>
<figure class="figure-image figure-image-fotolife" title="多重辺を持つ有向グラフ">[f:id:ogata-k:20181231103157p:plain:alt=多重辺を持つ有向グラフ]<figcaption>多重辺を持つ有向グラフの例</figcaption></figure>
このような「点と点の関係を矢印を使って表示する図」を有向グラフと言います。<br>
有向グラフは一筆書きの問題やフローチャート、構文木、ネットワーク、協調しながらの制御などなどいろいろなところに出てくるのがなんとなく想像つくかと思います。<br>

なんとなくのイメージがわかったところで数学的に有向グラフの定義をしていきます。

# いろいろな有向グラフの定義
有向グラフはいろいろなところに出て来るので多種多様な定義が存在します。そこで私が知っている次の三つの定義(i)~(iii)を紹介し、それぞれがどれだけの表現能力を持つかを解説していきます。<br>
## ** 定義(i) ** <br>
**有向グラフ**[tex: G]とは、集合[tex: V]とその直積の部分集合[tex: E \subset V \times V]の対[tex: (V, E)]のことである。そして[tex: V]の元を**頂点**、[tex: E]の元[tex: (i, j)]を**[tex: i]から[tex: j]への辺**(または単に**辺**)、この[tex: i]のことを辺の**始点**、[tex: j]を辺の**終点**と呼ぶ。

この定義は主に工学やグラフ理論に用いられる定義となります。これは**この定義では多重辺を持った有向グラフを表現できない**ことが効いています。工学やグラフ理論の分野ではどの頂点がつながっていればよいかを記述できればつながりを調べるのに十分であることから多重辺を必要としません。そのためこの定義の性質が効いてくるのです。<br>
また、この定義では無向グラフという「向きを考えない(この定義の有向グラフのような)グラフ」を考えることができます。この「向きを考えない」というのは、「頂点iから頂点jへの辺が存在していればjからiの辺も存在する」ということと同値な考えであるからです。<br>

## ** 定義(ii) ** <br>
**有向グラフ**[tex: G]とは、集合[tex: V]と集合[tex: E]と2つの関数[tex: dom, cod: E \rightarrow V]の組[tex: (V, E, dom, cod)]である。そして[tex: V]の元を**頂点**、[tex: E]の元[tex: e]を**辺**[tex: e]、[tex: dom(e)]を[tex: e]の**始点**、[tex: cod(e)]を[tex: e]の**終点**と呼ぶ。

これで定義すると**ループも多重辺も扱うことができる**為、この定義を採用する分野は例えば主に圏論やクイバー(有向グラフ)の表現論や状態遷移図などの自由度が高く簡単に複雑になる分野です。(他にもあったら教えてください。)<br>
また、この定義では略記を使わなければ、辺を取ってきてから[tex: dom]と[tex: cod]を使って始点と終点を宣言しなければいけないという点ではデメリットになりますが、辺が始点と終点の情報を持っているという点ではメリットになっています。<br>

## ** 定義(iii) **<br>
有向グラフ[tex: G]とは、集合[tex: V]と任意の[tex: V]の元[tex: i, j]に対して定義される集合[tex: E _ {i, j}]からなる集合族[tex: E = \left\\{E _ {i, j}\right\\} _ {i, j \in V}]からなる対[tex: (V, E)]のことである。そして[tex: V]の元[tex: i, j]をそれぞれ**頂点**、[tex: E _ {i, j}]を[tex: i]から[tex: j]の**辺集合**、[tex: E _ {i, j}]の元[tex: e _ {i, j}]を[tex: i]から[tex: j]への**辺**、[tex: i]を辺[tex: e _ {i, j}]の**始点**、[tex: j]を辺[tex: e _ {i, j}]の**終点**と呼ぶ。

この定義は表現能力的には(ii)と同じで、ループも多重辺も扱うことができます。その為同じ分野領域で用いられています。この定義で[tex: E _ {i, j}]を[tex: E(i, j)]と書くと圏論で頻繁に見る形式になるのでこちらの定義の方がなじみ深い人がいると思います。<br>
また、この定義では略記を使わなければ、始点と終点の情報を保持しているのは辺ではなく辺集合という点ではデメリットですが、同じ始点と終点をもつ辺の集合が定義で与えられていて考えやすいという点ではメリットとなります。


これらの定義は表現能力的には(i)⇒(ii)⇔(iii)という関係(これも有向グラフ!!)があります。**今後私のブログでは記事の最初に断りが無ければ(ii)の定義で考えていることにします。**<br>

# 有向グラフにおける用語
これまで用いた用語の説明をここで簡単にまとめておきます。そしてついでに略記ができるものは略記も紹介しておきます。

* 有向グラフ<br>
頂点と呼ばれる点を矢印でつなぐことで関係を図示できるようにしたもの。英名がdirected graphの為ダイグラフとも呼ばれる。数学だけに限らずいろいろなところに出てくる。<br>
* 頂点<br>
有向グラフにおいて関係を考える対象物。構造が入っていなくても良い。ノードとも呼ばれる。<figure class="figure-image figure-image-fotolife" title="例１">[f:id:ogata-k:20181231102556p:plain:alt=ループと多重辺なしの画像]<figcaption>例１</figcaption></figure><figure class="figure-image figure-image-fotolife" title="例2">[f:id:ogata-k:20181231102933p:plain:alt=ループを持つグラフ]<figcaption>例2</figcaption></figure><figure class="figure-image figure-image-fotolife" title="例3">[f:id:ogata-k:20181231103157p:plain:alt=多重辺を持つグラフ]<figcaption>例3</figcaption></figure><br>
[tex: v]が有向グラフ[tex: G]の頂点であることを[tex: v \in G]と略記する。<br>
* 辺<br>
有向グラフにおける頂点間の関係を依存関係も込めて表現するもの。頂点に構造があれば関数で書けることもあるが普通は関数では書けない。その例として少し高度だが圏論の順序圏とか圏としてみた群があげられる。<br>
[tex: e]が有向グラフ[tex: G]の頂点[tex: i]から頂点[tex: j]への辺であることを[tex: e: i \rightarrow j ] in [tex: G]と略記する。<br>
* 道<br>
ここでは厳密には定義しないが、有向グラフ[tex: G]の頂点[tex: i]から頂点[tex: j]への長さn([tex: \geq 0])の道とは、頂点[tex: i]からn回辺をたどって頂点[tex: j]へ行ったときの通ったn組の辺のことをいう。
* 始点<br>
辺を矢印で書いたときの根元のことをいう。
* 終点<br>
辺を矢印で書いたときの指している先のことをいう。
* 隣接<br>
有向グラフ[tex: G]において**頂点[tex: i]が頂点[tex: j]と隣接している**とは、[tex: i]から[tex: j]への辺[tex: e]in[tex: G]が存在していることをいう。似たような言い回しになるが、有向グラフ[tex: G]において**頂点[tex: i]と頂点[tex: j]が互いに隣接している**とは、[tex: i]から[tex: j]への辺[tex: e] in [tex: G]と[tex: j]から[tex: i]への辺[tex: e'] in [tex: G]が存在していることをいう。
* ループ<br>
始点と終点が一致する辺のことをいう。
* 多重辺<br>
ある頂点間に二本以上の辺が存在することをいう。

# 最後に
これまで長々と説明してきて有向グラフは何か難しいものだと思っている人もいるかもしれませんが、単なる対象とそれを結び付ける矢印の集まりですから有向グラフ自体は難しくありません。難しいのは分野によって必要とするレベルが違うことによる定義のバリエーションが存在することです。そのせいで調べても有向グラフの定義が違ってしまいわからなくなってしまってお手上げになってしまいます。大まかな定義はこのブログですべてだと思うので参考にしながら有向グラフについて知っていって欲しいと思います。<br>
これでこの記事は最後となります。最後まで読んでいただきありがとうございます。<br><br>
それでは**良き有向グラフライフを！！**

# 2019/01/08 追記
ループも多重辺を持たない定義を見つけたので追記します。
## **定義(iv)**<br>
[tex: V]を集合とする。今[tex: (V, 2)]を[tex: V]の元の個数が2の部分集合全体とし、<[tex: V, 2]>を[tex: (V, 2)]の元に順番も考えた集合とする。つまり [tex: \left\\{ u, v \right\\} ,  \left\\{ v, u \right\\}  \in ]<[tex: V, 2]> に対して[tex: \left\\{u, v\right\\} \neq \left\\{v,u \right\\}]が成り立つ。この[tex: \left\\{u, v\right\\}]のことを<[tex: u, v]>と書くことにする。そしてこの<[tex: V, 2]>の部分集合をEとする。<br>
このとき有向グラフ[tex: G]とは組[tex: (V, E)]のこととして定義する。そして[tex: V]の元をそ**頂点**、<[tex: u, v]>[tex: \in E]を[tex: u]から[tex: v]の**辺**、[tex: u]を辺<[tex: u, v]>の**始点**、[tex: v]を辺<[tex: u, v]>の**終点**と呼ぶ。

この定義は辺を部分集合に順序を付けて取ってきていることからループを持たないことがわかります。ゆえに表現能力は最弱です。（つまり(iv)⇒(i)⇒(ii)⇔(iii)）<br>
また、(i)のように無向グラフを考えることもできます。無向グラフは向きを考えない有向グラフのようなものであったのでこの定義で向きを与えている<[tex: u, v]>から順番の考えを忘れた普通の集合[tex: \left\\{ u, v\right\\}]で辺を与えてやると組[tex: (V, E)]は無向グラフになります。<br>
この定義の有向グラフが使われている分野はまだ確認できていませんが、守屋悦朗著のグラフ上の演算についての論文に無向グラフバージョンが16ページで確認できます。
